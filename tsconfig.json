{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    "baseUrl": "./src",

    /* Language and Environment */
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["es6"],                                      /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */

    /* Modules */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "rootDir": "src",                                    /* Specify the root folder within your source files. */
    "typeRoots": ["./global.d.ts", "./node_modules/@types"],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */

    /* JavaScript Support */
    "allowJs": true,                                     /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    "outDir": "build",                                   /* Specify an output folder for all emitted files. */
   
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
  
    /* Completeness */
    "skipLibCheck": true ,

    "paths": {
      "@dapper/configs/*": ["configs/*"],
      "@dapper/controllers/*": ["controllers/*"],
      "@dapper/interfaces/*": ["interfaces/*"],
      "@dapper/middlewares/*": ["middlewares/*"],
      "@dapper/models/*": ["models/*"],
      "@dapper/routes/*": ["routes/*"],
      "@dapper/services/*": ["services/*"],
      "@dapper/utils/*": ["utils/*"],
      "@dapper/validators/*": ["validators/*"]
    }
    
  }
}
